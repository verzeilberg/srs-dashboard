version: "3"

services:
  #  Log into this container with : docker-compose exec front sh
  front:
    env_file: .env
    build:
      context: ./docker/front
    #restart: always
    ports:
      - ${FRONT_PORT}:80
    volumes:
      - .:/home/docker:ro
    depends_on:
      - engine

  #  Log into this container with : docker-compose exec engine sh
  engine:
    env_file: .env
    build:
      context: ./docker/engine/
      args:
        # Get the user id & group id of the owner of the project dir with "ls -ln" and paste the result here. This will update the
        # project dir permission inside the container
        - HOST_USER=${HOST_USER}
        - HOST_USERGROUP=${HOST_USERGROUP}
        - PHP_XDEBUG_VERSION=${PHP_XDEBUG_VERSION}
    #restart: always
    ports:
      - ${ENGINE_PORT}:9000
    volumes:
      - .:/home/docker:rw
      - ./docker/engine/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
    environment:
      XDEBUG_CONFIG: "xdebug.idekey='xdebug'"
      PHP_IDE_CONFIG: "serverName=xdebug"
    depends_on:
      - database

  #  Log into this container with : docker-compose exec database sh
  database:
    env_file: .env
    build: ./docker/database
    #restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      # Allow empty password for the root user
      # - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    ports:
      - ${DB_PORT}:3306

  # A package.json file is required with script command (npm run watch, npm run dev....)
  #  Log into this container with : docker-compose exec build sh
  build:
    env_file: .env
    build:
      context: ./docker/nodejs/
      args:
        # Get the user id & group id of the owner of the project dir with "ls -la" and paste the result here. This will update the
        # project dir permission inside the container
        - HOST_USER=${HOST_USER}
        - HOST_USERGROUP=${HOST_USERGROUP}
    #restart: always
    volumes:
      - ./:/home/docker:rw
    #    Insert the NPM run command, from the package.json, to execute at startup
    command: "npm run dev"
## MailDev allow to test your projects' emails during development
## Go to localhost:1080 to see the mail box (where 1080 is the value of ${WEP_PORT})
#  maildev:
#    env_file: .env
#    image: djfarrelly/maildev
#    ports:
#      - ${WEP_PORT}:80
#      - ${SMTP_PORT}:25
